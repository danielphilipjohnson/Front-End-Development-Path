{"version":3,"sources":["Components/Controls/Controls.js","Components/Controls/VolumeControl.js","Components/Display.js","Components/DrumButton.js","Components/PadBank.js","Components/Navbar/Navbar.js","Components/Sidebar.js","data/soundBank.js","App.js","serviceWorker.js","index.js"],"names":["Controls","event","soundSetName","target","value","this","props","updateSoundBankAndDisplay","bankSets","map","drumObj","i","padBankArr","react_default","a","createElement","key","soundBanksName","className","name","onChange","bind","makeSoundOptions","Component","VolumeControl","changeVolume","type","min","max","id","Display","text","src","alt","Controls_VolumeControl","Components_Controls_Controls","DrumButton","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","playSound","assertThisInitialized","handleKeyPress","document","addEventListener","removeEventListener","e","keyCode","sound","getElementById","keyTrigger","updateDisplaySoundFileName","soundId","volume","audioVolume","currentTime","play","myClasses","onClick","source","onKeyPress","PadBank","drumButtons","currentBankSet","soundFiles","soundFilesArr","Components_DrumButton","url","Navbar","class","Sidebar","soundBanks","App","state","SoundBanks","display","currentsoundBanksName","SoundBankName","setState","newSoundBankName","soundBank","retrieveSoundBankViaName","selectedSoundBank","availableSoundBanks","index","length","console","log","changeCurrentSoundBankName","changeSoundBanks","Navbar_Navbar","src_Components_Display","src_Components_PadBank","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e05b7cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Controls.css';\n\nclass Controls extends Component {\n  onChange(event) {\n    const soundSetName = event.target.value;\n    this.props.updateSoundBankAndDisplay(soundSetName);\n  }\n\n  makeSoundOptions() {\n    /**\n     * Retrieve the name of every bank set\n     * Create and option tag with that value\n     */\n\n    const bankSets = this.props.bankSets;\n\n    const soundSetChoices = bankSets.map((drumObj, i, padBankArr) => {\n      return (\n        <option key={i} value={padBankArr[i].soundBanksName}>\n          {padBankArr[i].soundBanksName}\n        </option>\n      );\n    });\n\n    return soundSetChoices;\n  }\n  render() {\n    return (\n      <div className=\"sample-bank\">\n        <select\n          className=\"select-samples\"\n          name=\"soundset\"\n          onChange={this.onChange.bind(this)}\n        >\n          {this.makeSoundOptions()}\n        </select>\n\n        <i className=\"fas fa-chevron-right\"></i>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\n\nclass VolumeControl extends Component {\n  onChange(event) {\n    this.props.changeVolume(event.target.value / 100);\n  }\n\n  render() {\n    return (\n        <div className=\"sample-bank\">\n          <p className=\"sample-bank__label\">Volume</p>\n          <input\n          type=\"range\"\n          min=\"1\"\n          max=\"100\"\n          className=\"\"\n          id=\"volume\"\n          onChange={this.onChange.bind(this)}\n        />\n        </div>\n       \n    );\n  }\n}\n\nexport default VolumeControl;\n","import React, { Component } from \"react\";\nimport Controls from \"./Controls/Controls\";\nimport VolumeControl from './Controls/VolumeControl';\nimport \"./Display.css\";\n\n\nclass Display extends Component {\n  render() {\n    return (\n      <header id=\"display\" className=\"top\">\n        <div className=\"drum-display\">\n          <h2 className=\"drum-display__title\">{this.props.text}</h2>\n          <img src=\"https://raw.githubusercontent.com/danielphilipjohnson/Free-Code-Camp-Portfolio-2018-2019/master/2.Front-End-Libraries-Certification/3.%20Build%20a%20Drum%20Machine/src/img/waves.webp\" alt=\"Logo\" />\n\n          <div className=\"sample-bank\">\n            <p className=\"sample-bank__label\">Tune</p>\n            <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" />\n          </div>\n          \n          <div className=\"sample-bank\">\n            <p className=\"sample-bank__label\">Gain</p>\n            <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" />\n          </div>\n          <div className=\"sample-bank\">\n            <p className=\"sample-bank__label\">Pan</p>\n            <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" />\n          </div>\n\n          <VolumeControl changeVolume={this.props.changeVolume} />\n\n          <Controls\n            updateSoundBankAndDisplay={this.props.updateSoundBankAndDisplay}\n            bankSets={this.props.bankSets}\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Display;\n","import React, { Component } from \"react\";\n\nclass DrumButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyCode) {\n      this.playSound();\n    }\n  }\n\n  playSound(e) {\n    const sound = document.getElementById(this.props.keyTrigger);\n\n    this.props.updateDisplaySoundFileName(this.props.soundId);\n    sound.volume = this.props.audioVolume;\n    sound.currentTime = 0;\n    sound.play();\n  }\n\n  render() {\n    var myClasses = \"drum-button \" + this.props.id;\n    return (\n      <div>\n        {/* <p className=\"button-text\">\n          <span>{this.props.id}:</span>\n          {this.props.name}\n        </p> */}\n\n        <div\n          id={this.props.soundId}\n          onClick={this.playSound}\n          className={myClasses}\n        >\n          <p>{this.props.keyTrigger}</p>\n          <audio\n            id={this.props.keyTrigger}\n            src={this.props.source}\n            onKeyPress={this.handleKeyPress}\n          ></audio>\n        </div>\n      </div>\n    );\n  }\n}\nexport default DrumButton;\n","import React, {Component} from 'react';\nimport DrumButton from './DrumButton';\nimport \"./PadBank.css\";\n\nclass PadBank extends Component {\n    render() {\n\n        let soundFiles = this.props.currentBankSet.soundFiles;\n\n        const drumButtons = soundFiles.map((drumObj, i, soundFilesArr) => {\n            return (< DrumButton updateDisplaySoundFileName = {\n                this.props.updateDisplaySoundFileName\n\n            }\n            id = {\n                i\n            }\n\n            audioVolume = {\n                this.props.audioVolume\n            }\n            name = {\n                soundFilesArr[i].id\n            }\n            soundId = {\n                soundFilesArr[i].id\n            }\n            key = {\n                soundFilesArr[i].keyTrigger\n            }\n            keyCode = {\n                soundFilesArr[i].keyCode\n            }\n            keyTrigger = {\n                soundFilesArr[i].keyTrigger\n            }\n            source = {\n                soundFilesArr[i].url\n            } />)\n        });\n\n        return (\n            <div className=\"padBank\">\n                \n                <div className=\"drum-buttons\">\n                    {drumButtons}\n                </div>\n            </div>\n        );\n    }\n}\nexport default PadBank;","import React from \"react\";\nimport './Navbar.css';\n\nexport default function Navbar() {\n  return (\n    <nav className=\"nav\">\n      <ul className=\"nav__links\">\n        <li className=\"nav-logo\">\n          <h1 >@ DrumMachine v1</h1>\n        </li>\n        <li>\n          <div className=\"mid\">\n\n            <select className=\"sound-select\" name=\"sounds\" id=\"sounds\">\n              <option value=\"default\">Club - Default</option>\n              <option value=\"extra\">Extra</option>\n            </select>\n\n            <div className=\"btn-drum btn-drum--sm\">\n              <span>130</span>\n            </div>\n            <div className=\"btn-drum btn-drum--active btn-drum--sm\">\n              <i class=\"fas fa-play\"></i>\n            </div>\n            <div className=\"btn-drum btn-drum--sm\">\n              <i class=\"fas fa-circle\"></i>\n            </div>\n          </div>\n        </li>\n        <li></li>\n  \n      </ul>\n    </nav>\n  );\n}\n","import React from 'react'\n\nexport default function Sidebar() {\n  return (\n    <aside className=\"sidebar\">\n    <ul className=\"sidebar__links\">\n      <li>\n        <div className=\"btn-drum\">\n          <i class=\"fas fa-bars\"></i>\n        </div>\n      </li>\n      <li>\n        <div class=\"sidebar-btns\">\n          <div className=\"btn-drum\">\n            <i class=\"fas fa-search\"></i>\n          </div>\n\n          <div className=\"btn-drum signal\">\n            <i class=\"fas fa-signal\"></i>\n          </div>\n          {/* <div className=\"btn-drum\">\n            <i class=\"fas fa-wave-square\"></i>\n          </div> */}\n\n          <div className=\"btn-drum\">\n            <i class=\"fas fa-pencil-alt\"></i>\n          </div>\n        </div>\n      </li>\n      <li>\n        <div className=\"btn-drum\">\n          <i class=\"fas fa-sliders-h\"></i>\n        </div>\n      </li>\n    </ul>\n  </aside>\n  )\n}\n","const soundBanks = [{\n        soundBanksName: \"Default\",\n        soundFiles: [{\n                keyCode: 81,\n                keyTrigger: 'Q',\n                id: 'Heater-1',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n            }, {\n                keyCode: 87,\n                keyTrigger: 'W',\n                id: 'Heater-2',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n            }, {\n                keyCode: 69,\n                keyTrigger: 'E',\n                id: 'Heater-3',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n            }, {\n                keyCode: 65,\n                keyTrigger: 'A',\n                id: 'Heater-4',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n            }, {\n                keyCode: 83,\n                keyTrigger: 'S',\n                id: 'Clap',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n            }, {\n                keyCode: 68,\n                keyTrigger: 'D',\n                id: 'Open-HH',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n            }, {\n                keyCode: 90,\n                keyTrigger: 'Z',\n                id: \"Kick-n'-Hat\",\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n            }, {\n                keyCode: 88,\n                keyTrigger: 'X',\n                id: 'Kick',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n            }, {\n                keyCode: 67,\n                keyTrigger: 'C',\n                id: 'Closed-HH',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n            }\n\n        ]\n    }, {\n        soundBanksName: \"Extra\",\n        soundFiles: [{\n                keyCode: 81,\n                keyTrigger: 'Q',\n                id: 'Chord-1',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n            }, {\n                keyCode: 87,\n                keyTrigger: 'W',\n                id: 'Chord-2',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n            }, {\n                keyCode: 69,\n                keyTrigger: 'E',\n                id: 'Chord-3',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n            }, {\n                keyCode: 65,\n                keyTrigger: 'A',\n                id: 'Shaker',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n            }, {\n                keyCode: 83,\n                keyTrigger: 'S',\n                id: 'Open-HH',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n            }, {\n                keyCode: 68,\n                keyTrigger: 'D',\n                id: 'Closed-HH',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n            }, {\n                keyCode: 90,\n                keyTrigger: 'Z',\n                id: 'Punchy-Kick',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n            }, {\n                keyCode: 88,\n                keyTrigger: 'X',\n                id: 'Side-Stick',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n            }, {\n                keyCode: 67,\n                keyTrigger: 'C',\n                id: 'Snare',\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n            }\n\n        ]\n    }\n\n]\nexport default soundBanks;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./drum.css\";\nimport Display from \"./Components/Display\";\nimport PadBank from \"./Components/PadBank\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Sidebar from \"./Components/Sidebar\";\n\nimport SoundBanks from \"./data/soundBank\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bankSets: SoundBanks,\n      currentBankSet: SoundBanks[0],\n      display: \"-\",\n      currentsoundBanksName: \"default\",\n      audioVolume: 0.5,\n    };\n\n    this.changeVolume = this.changeVolume.bind(this);\n\n    this.updateDisplaySoundFileName = this.updateDisplaySoundFileName.bind(\n      this\n    );\n\n    this.updateSoundBankAndDisplay = this.updateSoundBankAndDisplay.bind(this);\n  }\n\n  changeCurrentSoundBankName(SoundBankName) {\n    this.setState({ currentsoundBanksName: SoundBankName });\n  }\n\n  // Requires testing function does three things\n  changeSoundBanks(newSoundBankName) {\n    const soundBank = this.retrieveSoundBankViaName(newSoundBankName);\n\n    this.setState({ currentBankSet: soundBank });\n  }\n\n  changeVolume(volume) {\n    this.setState({ audioVolume: volume });\n  }\n\n  retrieveSoundBankViaName(name) {\n    // retrieve all sound banks\n    const availableSoundBanks = this.state.bankSets;\n\n    let selectedSoundBank;\n\n    for (let index = 0; index < availableSoundBanks.length; index++) {\n      const soundBank = availableSoundBanks[index];\n\n      if (soundBank.soundBanksName === name) {\n        console.log(\"true\");\n        selectedSoundBank = soundBank;\n        break;\n      }\n    }\n\n    return selectedSoundBank;\n  }\n\n  updateDisplaySoundFileName(name) {\n    this.setState({ display: name });\n  }\n  updateSoundBankAndDisplay(newSoundBankName) {\n    this.changeCurrentSoundBankName(newSoundBankName);\n    this.changeSoundBanks(newSoundBankName);\n  }\n\n  render() {\n    return (\n      <div id=\"drum-machine\" className=\"App\">\n        <Navbar />\n        <main>\n          <Sidebar />\n\n          <div>\n            <div className=\"control-panel\">\n              <div className=\"controls\">\n                <div className=\"btn-group\">\n                    <button className=\"btn-drum btn-drum--active\">Record</button>\n                    <button className=\"btn-drum btn-drum\">Edit</button>\n                \n                </div>\n                <Display\n                  text={this.state.display}\n                  updateSoundBankAndDisplay={this.updateSoundBankAndDisplay}\n                  bankSets={this.state.bankSets}\n                  changeVolume={this.changeVolume}\n                />\n              </div>\n\n              <PadBank\n                audioVolume={this.state.audioVolume}\n                currentsoundBanksName={this.state.currentsoundBanksName}\n                currentBankSet={this.state.currentBankSet}\n                updateDisplaySoundFileName={this.updateDisplaySoundFileName}\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}